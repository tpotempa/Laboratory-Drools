package rules

import pl.edu.pwsztar.universityrecruitment.UniversityCandidate;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

// Informatyka
rule "Exam Qualification / Informatyka (one_set_of_rules)"
dialect "java"
agenda-group "one_set_of_rules"

when
    $uc : UniversityCandidate(examResult > 100, fieldOfStudy == "Informatyka");
then
    $uc.setAdmission(Boolean.TRUE);
    $uc.setQualificationType("Exam qualification");
    $uc.appendLogger("Agenda 'one_set_of_rules' got focus!");
	$uc.appendLogger("Agenda execution start date/time: " + ZonedDateTime.now().format(DateTimeFormatter.ISO_LOCAL_TIME));        
    $uc.appendLogger("Rule 'Exam qualification / Informatyka' fired!");
end

// Automatyka i robotyka
rule "Exam Qualification / Automatyka i robotyka (one_set_of_rules)"
dialect "java"
agenda-group "one_set_of_rules"

when
    $uc : UniversityCandidate(examResult > 60, fieldOfStudy == "Automatyka i robotyka");
then
    $uc.setAdmission(Boolean.TRUE);
    $uc.setQualificationType("Exam qualification");
    $uc.appendLogger("Agenda 'one_set_of_rules' got focus!");
	$uc.appendLogger("Agenda execution start date/time: " + ZonedDateTime.now().format(DateTimeFormatter.ISO_LOCAL_TIME));        
    $uc.appendLogger("Rule 'Exam qualification / Automatyka i robotyka' fired!");
end

// Elektrotechnika
rule "Exam Qualification / Elektrotechnika (one_set_of_rules)"
dialect "java"
agenda-group "one_set_of_rules"
when
    $uc : UniversityCandidate(examResult > 80, fieldOfStudy == "Elektrotechnika");
then
    $uc.setAdmission(Boolean.TRUE);
    $uc.setQualificationType("Exam qualification");
    $uc.appendLogger("Agenda 'one_set_of_rules' got focus!");
	$uc.appendLogger("Agenda execution start date/time: " + ZonedDateTime.now().format(DateTimeFormatter.ISO_LOCAL_TIME));        
    $uc.appendLogger("Rule 'Exam qualification / Elektrotechnika' fired!");
end