package rules

import pl.edu.pwsztar.universityrecruitment.UniversityCandidate;

// Informatyka
rule "Exam Qualification / Informatyka (one_set_of_rules_modify_no-loop)"
dialect "java"
agenda-group "one_set_of_rules_modify_no-loop"
no-loop true
when
    $uc : UniversityCandidate(examResult > 100, fieldOfStudy == "Informatyka");
    $ud : UniversityCandidate($uc.counter < 10);
then
  	modify($ud) { 
		setAdmission(true),
    	setQualificationType("Exam qualification"),
    	appendLogger("Rule 'Exam qualification / Informatyka' fired!"),
		incrementCounter()
    }    
end

// Automatyka i robotyka
rule "Exam Qualification / Automatyka i robotyka (one_set_of_rules_modify_no-loop)"
dialect "java"
agenda-group "one_set_of_rules_modify_no-loop"
no-loop true
when
    $uc : UniversityCandidate(examResult > 60, fieldOfStudy == "Automatyka i robotyka");
    $ud : UniversityCandidate($uc.counter < 10);
then
  	modify($ud) { 
		setAdmission(true),
    	setQualificationType("Exam qualification"),
    	appendLogger("Rule 'Exam qualification / Automatyka i robotyka' fired!"),
		incrementCounter()
    }    
end

// Elektrotechnika
rule "Exam Qualification / Elektrotechnika (one_set_of_rules_modify_no-loop)"
dialect "java"
agenda-group "one_set_of_rules_modify_no-loop"
no-loop true
when
    $uc : UniversityCandidate(examResult > 80, fieldOfStudy == "Elektrotechnika");
    $ud : UniversityCandidate($uc.counter < 10);
then
  	modify($ud) { 
		setAdmission(true),
    	setQualificationType("Exam qualification"),
    	appendLogger("Rule 'Exam qualification / Elektrotechnika' fired!"),
		incrementCounter()
    }    
    
end