package rules

import pl.edu.pwsztar.universityrecruitment.UniversityCandidate;

// Informatyka
rule "Exam Qualification / Informatyka (two_sets_of_rules_salience_lock-on-active_MODIFY)"
dialect "java"
agenda-group "two_sets_of_rules_salience_lock-on-active_MODIFY"
salience 100
lock-on-active true

when
    $uc : UniversityCandidate(examResult > 100, fieldOfStudy == "Informatyka");
then
  	modify($uc) { 
		setAdmission(true),
    	setQualificationType("Exam qualification"),
    	appendLogger("Rule 'Exam qualification / Informatyka' fired!"),
		incrementCounter()
    }    
end

// Automatyka i robotyka
rule "Exam Qualification / Automatyka i robotyka (two_sets_of_rules_salience_lock-on-active_MODIFY)"
dialect "java"
agenda-group "two_sets_of_rules_salience_lock-on-active_MODIFY"
salience 100
lock-on-active true
when
    $uc : UniversityCandidate(examResult > 60, fieldOfStudy == "Automatyka i robotyka");
then
  	modify($uc) { 
		setAdmission(true),
    	setQualificationType("Exam qualification"),
    	appendLogger("Rule 'Exam qualification / Automatyka i robotyka' fired!"),
		incrementCounter()
    }
end

// Elektrotechnika
rule "Exam Qualification / Elektrotechnika (two_sets_of_rules_salience_lock-on-active_MODIFY)"
dialect "java"
agenda-group "two_sets_of_rules_salience_lock-on-active_MODIFY"
salience 100
lock-on-active true
when
    $uc : UniversityCandidate(examResult > 80, fieldOfStudy == "Elektrotechnika");
then
  	modify($uc) { 
		setAdmission(true),
    	setQualificationType("Exam qualification"),
    	appendLogger("Rule 'Exam qualification / Elektrotechnika' fired!"),
		incrementCounter()
    }
end